<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>MITS Authentication</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    body {
      background: linear-gradient(to right, #dbeafe, #fef3c7);
    }
    .form-label {
      font-weight: 600;
      color: #374151;
    }
  </style>
</head>
<body class="min-h-screen flex items-center justify-center">

  <div class="w-full max-w-3xl bg-white p-8 rounded-2xl shadow-xl">

    <!-- Login Form -->
    <div id="authSection">
      <h2 class="text-3xl font-bold text-center text-blue-700 mb-6">Login to MITS</h2>
      <form id="loginForm" class="space-y-4">
        <div>
          <label class="form-label">Username</label>
          <input type="text" id="username" required class="w-full p-3 border rounded-xl focus:outline-none focus:ring focus:border-blue-300" />
        </div>

        <div>
          <label class="form-label">Password</label>
          <input type="password" id="password" required class="w-full p-3 border rounded-xl focus:outline-none focus:ring focus:border-blue-300" />
        </div>

        <button type="submit" class="w-full bg-blue-600 hover:bg-blue-700 text-white py-3 rounded-xl font-semibold transition">Login</button>
        <p id="authMessage" class="text-center text-sm mt-2"></p>
      </form>
    </div>

    <!-- Protected Application Section -->
    <div id="appSection" class="hidden">
      <div class="flex justify-between items-center mb-6">
        <h2 class="text-3xl font-bold text-green-700">MITS Dashboard</h2>
        <button onclick="logout()" class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-xl">Logout</button>
      </div>

      <form id="internshipForm" class="space-y-4">
        <div>
          <label class="form-label">Full Name</label>
          <input type="text" name="name" required class="w-full p-3 border rounded-xl focus:outline-none focus:ring focus:border-blue-300" />
        </div>

        <div>
          <label class="form-label">Email</label>
          <input type="email" name="email" required class="w-full p-3 border rounded-xl focus:outline-none focus:ring focus:border-blue-300" />
        </div>

        <div>
          <label class="form-label">University</label>
          <input type="text" name="university" required class="w-full p-3 border rounded-xl focus:outline-none focus:ring focus:border-blue-300" />
        </div>

        <button type="submit" id="submitBtn" class="w-full bg-blue-600 hover:bg-blue-700 text-white py-3 rounded-xl font-semibold transition">
          Submit Application
        </button>
        <p id="statusMessage" class="text-center text-sm mt-2"></p>
      </form>

      <div class="mt-10">
        <h3 class="text-xl font-semibold mb-4">Student Applications</h3>
        <ul id="studentList" class="bg-gray-100 rounded-xl shadow-inner p-4 space-y-3"></ul>
      </div>
    </div>
  </div>

  <script>
    const loginForm = document.getElementById('loginForm');
    const authMessage = document.getElementById('authMessage');
    const authSection = document.getElementById('authSection');
    const appSection = document.getElementById('appSection');

    const form = document.getElementById('internshipForm');
    const statusMessage = document.getElementById('statusMessage');
    const submitBtn = document.getElementById('submitBtn');
    const studentList = document.getElementById('studentList');

    let applicationCounter = 1;

    // Automatically allow any credentials for demo purposes
    loginForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const username = document.getElementById('username').value.trim();
      const password = document.getElementById('password').value;

      authMessage.textContent = 'Authenticating...';
      authMessage.className = 'text-center text-gray-600';

      if (username && password) {
        const token = btoa(`${username}:${Date.now()}`); // Simulated JWT
        localStorage.setItem('mitsToken', token);
        showApp();
      } else {
        authMessage.textContent = 'Username and password required';
        authMessage.className = 'text-center text-red-600';
      }
    });

    function showApp() {
      authSection.classList.add('hidden');
      appSection.classList.remove('hidden');
    }

    function logout() {
      localStorage.removeItem('mitsToken');
      authSection.classList.remove('hidden');
      appSection.classList.add('hidden');
    }

    if (localStorage.getItem('mitsToken')) {
      showApp();
    }

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      statusMessage.textContent = 'Submitting...';
      statusMessage.className = 'text-center text-gray-600';
      submitBtn.disabled = true;

      const formData = {
        name: form.name.value,
        email: form.email.value,
        university: form.university.value
      };

      try {
        await new Promise(resolve => setTimeout(resolve, 1000));

        const applicationId = applicationCounter++;
        statusMessage.textContent = `Success! Your Application ID is ${applicationId}`;
        statusMessage.className = 'text-center text-green-600';

        const listItem = document.createElement('li');
        listItem.className = 'border bg-white p-3 rounded-xl flex justify-between items-center shadow-sm';
        listItem.innerHTML = `
          <span><strong>ID ${applicationId}</strong>: ${formData.name} | ${formData.email} | ${formData.university}</span>
          <button class="bg-red-500 text-white text-xs px-3 py-1 rounded hover:bg-red-600" onclick="this.parentElement.remove()">Delete</button>
        `;
        studentList.appendChild(listItem);

        form.reset();
      } catch (error) {
        statusMessage.textContent = 'An unexpected error occurred. Please try again later.';
        statusMessage.className = 'text-center text-red-600';
      } finally {
        submitBtn.disabled = false;
      }
    });
  </script>
</body>
</html>
